{"ast":null,"code":"var _s = $RefreshSig$();\n// useValidation.js\n\nimport { useState } from 'react';\nimport validator from 'validator';\nconst useValidation = () => {\n  _s();\n  const [values, setValues] = useState({\n    phone: ''\n  });\n  const [errors, setErrors] = useState({});\n  const handleChange = e => {\n    setValues({\n      ...values,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    const newErrors = {};\n  };\n  const validate = values => {\n    let tempErrors = {};\n\n    // Validation logic for each field\n    if (!values.fullName) {\n      newErrors.fullName = 'Full Name is required';\n    }\n    if (!values.email) {\n      newErrors.email = 'Email is required';\n    } else if (!/\\S+@\\S+\\.\\S+/.test(values.email)) {\n      newErrors.email = 'Email address is invalid';\n    }\n    if (!values.phone) {\n      newErrors.phone = 'Phone Number is required';\n    } else if (!validator.isNumeric(values.phone)) {\n      newErrors.phone = 'Phone Number must only contain digits';\n    }\n    if (!values.position) {\n      newErrors.position = 'Position is required';\n    }\n    if ((values.position === 'Developer' || values.position === 'Designer') && !values.experience) {\n      newErrors.experience = 'Relevant Experience is required';\n    }\n    if (values.position === 'Designer' && !values.portfolio) {\n      newErrors.portfolio = 'Portfolio URL is required';\n    }\n    if (values.position === 'Manager' && !values.managementExperience) {\n      newErrors.managementExperience = 'Management Experience is required';\n    }\n    if (!values.skills || values.skills.length === 0) {\n      newErrors.skills = 'At least one skill must be selected';\n    }\n    if (!values.interviewTime) {\n      newErrors.interviewTime = 'Preferred Interview Time and Date is required';\n    }\n\n    // Update errors state\n    setErrors(tempErrors);\n    return Object.keys(tempErrors).length === 0;\n    // Return true if no errors, false otherwise\n  };\n  return {\n    errors,\n    validate\n  };\n};\n_s(useValidation, \"1Pro6p11zA9KShlA0tZn560yKPw=\");\nexport default useValidation;","map":{"version":3,"names":["useState","validator","useValidation","_s","values","setValues","phone","errors","setErrors","handleChange","e","target","name","value","handleSubmit","preventDefault","newErrors","validate","tempErrors","fullName","email","test","isNumeric","position","experience","portfolio","managementExperience","skills","length","interviewTime","Object","keys"],"sources":["C:/Users/Manav/OneDrive/Desktop/forms_assignment/level_2/src/hooks/useValidation.js"],"sourcesContent":["// useValidation.js\r\n\r\nimport { useState } from 'react';\r\nimport validator from 'validator';\r\n\r\nconst useValidation = () => {\r\n  const [values, setValues] = useState({ phone: '' });\r\n  const [errors, setErrors] = useState({});\r\n\r\n  const handleChange = (e) => {\r\n    setValues({ ...values, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const newErrors = {};\r\n  }\r\n\r\n  const validate = (values) => {\r\n   let tempErrors = {};\r\n\r\n    // Validation logic for each field\r\n    if (!values.fullName) {\r\n      newErrors.fullName = 'Full Name is required';\r\n    }\r\n\r\n    if (!values.email) {\r\n      newErrors.email = 'Email is required';\r\n    } else if (!/\\S+@\\S+\\.\\S+/.test(values.email)) {\r\n      newErrors.email = 'Email address is invalid';\r\n    }\r\n\r\n    if (!values.phone) {\r\n      newErrors.phone = 'Phone Number is required';\r\n    } else if (!validator.isNumeric(values.phone)) {\r\n      newErrors.phone = 'Phone Number must only contain digits';\r\n    }\r\n\r\n    if (!values.position) {\r\n      newErrors.position = 'Position is required';\r\n    }\r\n\r\n    if ((values.position === 'Developer' || values.position === 'Designer') && !values.experience) {\r\n      newErrors.experience = 'Relevant Experience is required';\r\n    }\r\n\r\n    if (values.position === 'Designer' && !values.portfolio) {\r\n      newErrors.portfolio = 'Portfolio URL is required';\r\n    }\r\n\r\n    if (values.position === 'Manager' && !values.managementExperience) {\r\n      newErrors.managementExperience = 'Management Experience is required';\r\n    }\r\n\r\n    if (!values.skills || values.skills.length === 0) {\r\n      newErrors.skills = 'At least one skill must be selected';\r\n    }\r\n\r\n    if (!values.interviewTime) {\r\n      newErrors.interviewTime = 'Preferred Interview Time and Date is required';\r\n    }\r\n\r\n    // Update errors state\r\n    setErrors(tempErrors);\r\n    return Object.keys(tempErrors).length === 0;\r\n    // Return true if no errors, false otherwise\r\n    \r\n  };\r\n\r\n  return {\r\n    errors,\r\n    validate,\r\n  };\r\n};\r\n\r\nexport default useValidation;\r\n"],"mappings":";AAAA;;AAEA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,SAAS,MAAM,WAAW;AAEjC,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGL,QAAQ,CAAC;IAAEM,KAAK,EAAE;EAAG,CAAC,CAAC;EACnD,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC,CAAC;EAExC,MAAMS,YAAY,GAAIC,CAAC,IAAK;IAC1BL,SAAS,CAAC;MAAE,GAAGD,MAAM;MAAE,CAACM,CAAC,CAACC,MAAM,CAACC,IAAI,GAAGF,CAAC,CAACC,MAAM,CAACE;IAAM,CAAC,CAAC;EAC3D,CAAC;EAED,MAAMC,YAAY,GAAIJ,CAAC,IAAK;IAC1BA,CAAC,CAACK,cAAc,CAAC,CAAC;IAClB,MAAMC,SAAS,GAAG,CAAC,CAAC;EACtB,CAAC;EAED,MAAMC,QAAQ,GAAIb,MAAM,IAAK;IAC5B,IAAIc,UAAU,GAAG,CAAC,CAAC;;IAElB;IACA,IAAI,CAACd,MAAM,CAACe,QAAQ,EAAE;MACpBH,SAAS,CAACG,QAAQ,GAAG,uBAAuB;IAC9C;IAEA,IAAI,CAACf,MAAM,CAACgB,KAAK,EAAE;MACjBJ,SAAS,CAACI,KAAK,GAAG,mBAAmB;IACvC,CAAC,MAAM,IAAI,CAAC,cAAc,CAACC,IAAI,CAACjB,MAAM,CAACgB,KAAK,CAAC,EAAE;MAC7CJ,SAAS,CAACI,KAAK,GAAG,0BAA0B;IAC9C;IAEA,IAAI,CAAChB,MAAM,CAACE,KAAK,EAAE;MACjBU,SAAS,CAACV,KAAK,GAAG,0BAA0B;IAC9C,CAAC,MAAM,IAAI,CAACL,SAAS,CAACqB,SAAS,CAAClB,MAAM,CAACE,KAAK,CAAC,EAAE;MAC7CU,SAAS,CAACV,KAAK,GAAG,uCAAuC;IAC3D;IAEA,IAAI,CAACF,MAAM,CAACmB,QAAQ,EAAE;MACpBP,SAAS,CAACO,QAAQ,GAAG,sBAAsB;IAC7C;IAEA,IAAI,CAACnB,MAAM,CAACmB,QAAQ,KAAK,WAAW,IAAInB,MAAM,CAACmB,QAAQ,KAAK,UAAU,KAAK,CAACnB,MAAM,CAACoB,UAAU,EAAE;MAC7FR,SAAS,CAACQ,UAAU,GAAG,iCAAiC;IAC1D;IAEA,IAAIpB,MAAM,CAACmB,QAAQ,KAAK,UAAU,IAAI,CAACnB,MAAM,CAACqB,SAAS,EAAE;MACvDT,SAAS,CAACS,SAAS,GAAG,2BAA2B;IACnD;IAEA,IAAIrB,MAAM,CAACmB,QAAQ,KAAK,SAAS,IAAI,CAACnB,MAAM,CAACsB,oBAAoB,EAAE;MACjEV,SAAS,CAACU,oBAAoB,GAAG,mCAAmC;IACtE;IAEA,IAAI,CAACtB,MAAM,CAACuB,MAAM,IAAIvB,MAAM,CAACuB,MAAM,CAACC,MAAM,KAAK,CAAC,EAAE;MAChDZ,SAAS,CAACW,MAAM,GAAG,qCAAqC;IAC1D;IAEA,IAAI,CAACvB,MAAM,CAACyB,aAAa,EAAE;MACzBb,SAAS,CAACa,aAAa,GAAG,+CAA+C;IAC3E;;IAEA;IACArB,SAAS,CAACU,UAAU,CAAC;IACrB,OAAOY,MAAM,CAACC,IAAI,CAACb,UAAU,CAAC,CAACU,MAAM,KAAK,CAAC;IAC3C;EAEF,CAAC;EAED,OAAO;IACLrB,MAAM;IACNU;EACF,CAAC;AACH,CAAC;AAACd,EAAA,CApEID,aAAa;AAsEnB,eAAeA,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}