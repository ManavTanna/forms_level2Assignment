{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from 'react';\nconst useFormState = initialValues => {\n  _s();\n  const [values, setValues] = useState(initialValues);\n  const handleChange = e => {\n    const {\n      name,\n      value,\n      type,\n      checked\n    } = e.target;\n    if (type === 'checkbox') {\n      if (Array.isArray(values[name])) {\n        // For checkboxes representing an array of skills\n        setValues({\n          ...values,\n          [name]: checked ? [...values[name], value] : values[name].filter(skill => skill !== value)\n        });\n      } else {\n        // For single boolean checkbox\n        setValues({\n          ...values,\n          [name]: checked\n        });\n      }\n    } else {\n      setValues({\n        ...values,\n        [name]: value\n      });\n    }\n  };\n  return {\n    values,\n    handleChange,\n    setValues\n  };\n};\n_s(useFormState, \"4lcv5AY4KdEfpz8E2Yi+UXqs8J8=\");\nexport default useFormState;","map":{"version":3,"names":["useState","useFormState","initialValues","_s","values","setValues","handleChange","e","name","value","type","checked","target","Array","isArray","filter","skill"],"sources":["C:/Users/Manav/OneDrive/Desktop/forms_assignment/level_2/src/hooks/useFormState.js"],"sourcesContent":["import { useState } from 'react';\r\n\r\nconst useFormState = (initialValues) => {\r\n  const [values, setValues] = useState(initialValues);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value, type, checked } = e.target;\r\n\r\n    if (type === 'checkbox') {\r\n      if (Array.isArray(values[name])) {\r\n        // For checkboxes representing an array of skills\r\n        setValues({\r\n          ...values,\r\n          [name]: checked\r\n            ? [...values[name], value]\r\n            : values[name].filter(skill => skill !== value),\r\n        });\r\n      } else {\r\n        // For single boolean checkbox\r\n        setValues({\r\n          ...values,\r\n          [name]: checked,\r\n        });\r\n      }\r\n    } else {\r\n      setValues({\r\n        ...values,\r\n        [name]: value,\r\n      });\r\n    }\r\n  };\r\n\r\n  return {\r\n    values,\r\n    handleChange,\r\n    setValues,\r\n  };\r\n};\r\n\r\nexport default useFormState;\r\n"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAEhC,MAAMC,YAAY,GAAIC,aAAa,IAAK;EAAAC,EAAA;EACtC,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGL,QAAQ,CAACE,aAAa,CAAC;EAEnD,MAAMI,YAAY,GAAIC,CAAC,IAAK;IAC1B,MAAM;MAAEC,IAAI;MAAEC,KAAK;MAAEC,IAAI;MAAEC;IAAQ,CAAC,GAAGJ,CAAC,CAACK,MAAM;IAE/C,IAAIF,IAAI,KAAK,UAAU,EAAE;MACvB,IAAIG,KAAK,CAACC,OAAO,CAACV,MAAM,CAACI,IAAI,CAAC,CAAC,EAAE;QAC/B;QACAH,SAAS,CAAC;UACR,GAAGD,MAAM;UACT,CAACI,IAAI,GAAGG,OAAO,GACX,CAAC,GAAGP,MAAM,CAACI,IAAI,CAAC,EAAEC,KAAK,CAAC,GACxBL,MAAM,CAACI,IAAI,CAAC,CAACO,MAAM,CAACC,KAAK,IAAIA,KAAK,KAAKP,KAAK;QAClD,CAAC,CAAC;MACJ,CAAC,MAAM;QACL;QACAJ,SAAS,CAAC;UACR,GAAGD,MAAM;UACT,CAACI,IAAI,GAAGG;QACV,CAAC,CAAC;MACJ;IACF,CAAC,MAAM;MACLN,SAAS,CAAC;QACR,GAAGD,MAAM;QACT,CAACI,IAAI,GAAGC;MACV,CAAC,CAAC;IACJ;EACF,CAAC;EAED,OAAO;IACLL,MAAM;IACNE,YAAY;IACZD;EACF,CAAC;AACH,CAAC;AAACF,EAAA,CAnCIF,YAAY;AAqClB,eAAeA,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}