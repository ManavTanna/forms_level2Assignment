{"ast":null,"code":"const useFormValidation = formData => {\n  const errors = {};\n\n  // Basic validations\n  if (!formData.fullName.trim()) {\n    errors.fullName = 'Full Name is required';\n  }\n  if (!formData.email.trim()) {\n    errors.email = 'Email is required';\n  } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\n    errors.email = 'Email is invalid';\n  }\n  if (!formData.phoneNumber.trim()) {\n    errors.phoneNumber = 'Phone Number is required';\n  } else if (isNaN(formData.phoneNumber)) {\n    errors.phoneNumber = 'Phone Number must be a valid number';\n  }\n  if (!formData.applyingForPosition) {\n    errors.applyingForPosition = 'Applying for Position is required';\n  }\n\n  // Conditional validations\n  if (formData.applyingForPosition === 'Developer' || formData.applyingForPosition === 'Designer') {\n    if (!formData.relevantExperience.trim()) {\n      errors.relevantExperience = 'Relevant Experience is required';\n    } else if (isNaN(formData.relevantExperience) || parseFloat(formData.relevantExperience) <= 0) {\n      errors.relevantExperience = 'Relevant Experience must be a number greater than 0';\n    }\n  }\n  if (formData.applyingForPosition === 'Designer') {\n    if (!formData.portfolioURL.trim()) {\n      errors.portfolioURL = 'Portfolio URL is required';\n    } else if (!isValidURL(formData.portfolioURL)) {\n      errors.portfolioURL = 'Portfolio URL must be a valid URL';\n    }\n  }\n  if (formData.applyingForPosition === 'Manager') {\n    if (!formData.managementExperience.trim()) {\n      errors.managementExperience = 'Management Experience is required';\n    }\n  }\n  if (formData.additionalSkills.length === 0) {\n    errors.additionalSkills = 'Please select at least one Additional Skill';\n  }\n  if (!formData.preferredInterviewTime.trim()) {\n    errors.preferredInterviewTime = 'Preferred Interview Time is required';\n  }\n  return errors;\n};\nconst isValidURL = url => {\n  try {\n    new URL(url);\n    return true;\n  } catch (error) {\n    return false;\n  }\n};\nexport default useFormValidation;","map":{"version":3,"names":["useFormValidation","formData","errors","fullName","trim","email","test","phoneNumber","isNaN","applyingForPosition","relevantExperience","parseFloat","portfolioURL","isValidURL","managementExperience","additionalSkills","length","preferredInterviewTime","url","URL","error"],"sources":["C:/Users/Manav/OneDrive/Desktop/forms_assignment/level_2/src/hooks/Validation.js"],"sourcesContent":["const useFormValidation = (formData) => {\r\n    const errors = {};\r\n  \r\n    // Basic validations\r\n    if (!formData.fullName.trim()) {\r\n      errors.fullName = 'Full Name is required';\r\n    }\r\n  \r\n    if (!formData.email.trim()) {\r\n      errors.email = 'Email is required';\r\n    } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\r\n      errors.email = 'Email is invalid';\r\n    }\r\n  \r\n    if (!formData.phoneNumber.trim()) {\r\n      errors.phoneNumber = 'Phone Number is required';\r\n    } else if (isNaN(formData.phoneNumber)) {\r\n      errors.phoneNumber = 'Phone Number must be a valid number';\r\n    }\r\n  \r\n    if (!formData.applyingForPosition) {\r\n      errors.applyingForPosition = 'Applying for Position is required';\r\n    }\r\n  \r\n    // Conditional validations\r\n    if (formData.applyingForPosition === 'Developer' || formData.applyingForPosition === 'Designer') {\r\n      if (!formData.relevantExperience.trim()) {\r\n        errors.relevantExperience = 'Relevant Experience is required';\r\n      } else if (isNaN(formData.relevantExperience) || parseFloat(formData.relevantExperience) <= 0) {\r\n        errors.relevantExperience = 'Relevant Experience must be a number greater than 0';\r\n      }\r\n    }\r\n  \r\n    if (formData.applyingForPosition === 'Designer') {\r\n      if (!formData.portfolioURL.trim()) {\r\n        errors.portfolioURL = 'Portfolio URL is required';\r\n      } else if (!isValidURL(formData.portfolioURL)) {\r\n        errors.portfolioURL = 'Portfolio URL must be a valid URL';\r\n      }\r\n    }\r\n  \r\n    if (formData.applyingForPosition === 'Manager') {\r\n      if (!formData.managementExperience.trim()) {\r\n        errors.managementExperience = 'Management Experience is required';\r\n      }\r\n    }\r\n  \r\n    if (formData.additionalSkills.length === 0) {\r\n      errors.additionalSkills = 'Please select at least one Additional Skill';\r\n    }\r\n  \r\n    if (!formData.preferredInterviewTime.trim()) {\r\n      errors.preferredInterviewTime = 'Preferred Interview Time is required';\r\n    }\r\n  \r\n    return errors;\r\n  };\r\n  \r\n  const isValidURL = (url) => {\r\n    try {\r\n      new URL(url);\r\n      return true;\r\n    } catch (error) {\r\n      return false;\r\n    }\r\n  };\r\n  \r\n  export default useFormValidation;\r\n  "],"mappings":"AAAA,MAAMA,iBAAiB,GAAIC,QAAQ,IAAK;EACpC,MAAMC,MAAM,GAAG,CAAC,CAAC;;EAEjB;EACA,IAAI,CAACD,QAAQ,CAACE,QAAQ,CAACC,IAAI,CAAC,CAAC,EAAE;IAC7BF,MAAM,CAACC,QAAQ,GAAG,uBAAuB;EAC3C;EAEA,IAAI,CAACF,QAAQ,CAACI,KAAK,CAACD,IAAI,CAAC,CAAC,EAAE;IAC1BF,MAAM,CAACG,KAAK,GAAG,mBAAmB;EACpC,CAAC,MAAM,IAAI,CAAC,cAAc,CAACC,IAAI,CAACL,QAAQ,CAACI,KAAK,CAAC,EAAE;IAC/CH,MAAM,CAACG,KAAK,GAAG,kBAAkB;EACnC;EAEA,IAAI,CAACJ,QAAQ,CAACM,WAAW,CAACH,IAAI,CAAC,CAAC,EAAE;IAChCF,MAAM,CAACK,WAAW,GAAG,0BAA0B;EACjD,CAAC,MAAM,IAAIC,KAAK,CAACP,QAAQ,CAACM,WAAW,CAAC,EAAE;IACtCL,MAAM,CAACK,WAAW,GAAG,qCAAqC;EAC5D;EAEA,IAAI,CAACN,QAAQ,CAACQ,mBAAmB,EAAE;IACjCP,MAAM,CAACO,mBAAmB,GAAG,mCAAmC;EAClE;;EAEA;EACA,IAAIR,QAAQ,CAACQ,mBAAmB,KAAK,WAAW,IAAIR,QAAQ,CAACQ,mBAAmB,KAAK,UAAU,EAAE;IAC/F,IAAI,CAACR,QAAQ,CAACS,kBAAkB,CAACN,IAAI,CAAC,CAAC,EAAE;MACvCF,MAAM,CAACQ,kBAAkB,GAAG,iCAAiC;IAC/D,CAAC,MAAM,IAAIF,KAAK,CAACP,QAAQ,CAACS,kBAAkB,CAAC,IAAIC,UAAU,CAACV,QAAQ,CAACS,kBAAkB,CAAC,IAAI,CAAC,EAAE;MAC7FR,MAAM,CAACQ,kBAAkB,GAAG,qDAAqD;IACnF;EACF;EAEA,IAAIT,QAAQ,CAACQ,mBAAmB,KAAK,UAAU,EAAE;IAC/C,IAAI,CAACR,QAAQ,CAACW,YAAY,CAACR,IAAI,CAAC,CAAC,EAAE;MACjCF,MAAM,CAACU,YAAY,GAAG,2BAA2B;IACnD,CAAC,MAAM,IAAI,CAACC,UAAU,CAACZ,QAAQ,CAACW,YAAY,CAAC,EAAE;MAC7CV,MAAM,CAACU,YAAY,GAAG,mCAAmC;IAC3D;EACF;EAEA,IAAIX,QAAQ,CAACQ,mBAAmB,KAAK,SAAS,EAAE;IAC9C,IAAI,CAACR,QAAQ,CAACa,oBAAoB,CAACV,IAAI,CAAC,CAAC,EAAE;MACzCF,MAAM,CAACY,oBAAoB,GAAG,mCAAmC;IACnE;EACF;EAEA,IAAIb,QAAQ,CAACc,gBAAgB,CAACC,MAAM,KAAK,CAAC,EAAE;IAC1Cd,MAAM,CAACa,gBAAgB,GAAG,6CAA6C;EACzE;EAEA,IAAI,CAACd,QAAQ,CAACgB,sBAAsB,CAACb,IAAI,CAAC,CAAC,EAAE;IAC3CF,MAAM,CAACe,sBAAsB,GAAG,sCAAsC;EACxE;EAEA,OAAOf,MAAM;AACf,CAAC;AAED,MAAMW,UAAU,GAAIK,GAAG,IAAK;EAC1B,IAAI;IACF,IAAIC,GAAG,CAACD,GAAG,CAAC;IACZ,OAAO,IAAI;EACb,CAAC,CAAC,OAAOE,KAAK,EAAE;IACd,OAAO,KAAK;EACd;AACF,CAAC;AAED,eAAepB,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}