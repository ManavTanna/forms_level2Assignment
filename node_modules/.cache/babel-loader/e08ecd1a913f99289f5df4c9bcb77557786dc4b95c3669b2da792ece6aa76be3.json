{"ast":null,"code":"// hooks/useFormValidation.js\nconst useFormValidation = formData => {\n  const errors = {};\n  if (!formData.fullName.trim()) {\n    errors.fullName = 'Full Name is required';\n  }\n  if (!formData.email.trim()) {\n    errors.email = 'Email is required';\n  } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\n    errors.email = 'Email address is invalid';\n  }\n  if (!formData.phoneNumber.trim()) {\n    errors.phoneNumber = 'Phone Number is required';\n  }\n  if (!formData.applyingForPosition) {\n    errors.applyingForPosition = 'Applying for Position is required';\n  }\n  if (formData.applyingForPosition === 'Developer' && !formData.relevantExperience) {\n    errors.relevantExperience = 'Relevant Experience is required';\n  }\n  if (formData.applyingForPosition === 'Designer' && !formData.portfolioURL) {\n    errors.portfolioURL = 'Portfolio URL is required';\n  }\n  if (formData.applyingForPosition === 'Manager' && !formData.managementExperience) {\n    errors.managementExperience = 'Management Experience is required';\n  }\n  if (formData.attendingWithGuest === 'Yes' && !formData.guestName.trim()) {\n    errors.guestName = 'Guest Name is required';\n  }\n  if (!formData.attendingWithGuest) {\n    errors.attendingWithGuest = 'Please select if you are attending with a guest';\n  }\n  if (!formData.preferredInterviewTime.trim()) {\n    errors.preferredInterviewTime = 'Preferred Interview Time is required';\n  }\n  return errors;\n};\nexport default useFormValidation;","map":{"version":3,"names":["useFormValidation","formData","errors","fullName","trim","email","test","phoneNumber","applyingForPosition","relevantExperience","portfolioURL","managementExperience","attendingWithGuest","guestName","preferredInterviewTime"],"sources":["C:/Users/Manav/OneDrive/Desktop/forms_assignment/level_2/src/hooks/Validation.js"],"sourcesContent":["// hooks/useFormValidation.js\r\nconst useFormValidation = (formData) => {\r\n  const errors = {};\r\n\r\n  if (!formData.fullName.trim()) {\r\n    errors.fullName = 'Full Name is required';\r\n  }\r\n\r\n  if (!formData.email.trim()) {\r\n    errors.email = 'Email is required';\r\n  } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\r\n    errors.email = 'Email address is invalid';\r\n  }\r\n\r\n  if (!formData.phoneNumber.trim()) {\r\n    errors.phoneNumber = 'Phone Number is required';\r\n  }\r\n\r\n  if (!formData.applyingForPosition) {\r\n    errors.applyingForPosition = 'Applying for Position is required';\r\n  }\r\n\r\n  if (formData.applyingForPosition === 'Developer' && !formData.relevantExperience) {\r\n    errors.relevantExperience = 'Relevant Experience is required';\r\n  }\r\n\r\n  if (formData.applyingForPosition === 'Designer' && !formData.portfolioURL) {\r\n    errors.portfolioURL = 'Portfolio URL is required';\r\n  }\r\n\r\n  if (formData.applyingForPosition === 'Manager' && !formData.managementExperience) {\r\n    errors.managementExperience = 'Management Experience is required';\r\n  }\r\n\r\n  if (formData.attendingWithGuest === 'Yes' && !formData.guestName.trim()) {\r\n    errors.guestName = 'Guest Name is required';\r\n  }\r\n\r\n  if (!formData.attendingWithGuest) {\r\n    errors.attendingWithGuest = 'Please select if you are attending with a guest';\r\n  }\r\n\r\n  if (!formData.preferredInterviewTime.trim()) {\r\n    errors.preferredInterviewTime = 'Preferred Interview Time is required';\r\n  }\r\n\r\n  return errors;\r\n};\r\n\r\nexport default useFormValidation;\r\n"],"mappings":"AAAA;AACA,MAAMA,iBAAiB,GAAIC,QAAQ,IAAK;EACtC,MAAMC,MAAM,GAAG,CAAC,CAAC;EAEjB,IAAI,CAACD,QAAQ,CAACE,QAAQ,CAACC,IAAI,CAAC,CAAC,EAAE;IAC7BF,MAAM,CAACC,QAAQ,GAAG,uBAAuB;EAC3C;EAEA,IAAI,CAACF,QAAQ,CAACI,KAAK,CAACD,IAAI,CAAC,CAAC,EAAE;IAC1BF,MAAM,CAACG,KAAK,GAAG,mBAAmB;EACpC,CAAC,MAAM,IAAI,CAAC,cAAc,CAACC,IAAI,CAACL,QAAQ,CAACI,KAAK,CAAC,EAAE;IAC/CH,MAAM,CAACG,KAAK,GAAG,0BAA0B;EAC3C;EAEA,IAAI,CAACJ,QAAQ,CAACM,WAAW,CAACH,IAAI,CAAC,CAAC,EAAE;IAChCF,MAAM,CAACK,WAAW,GAAG,0BAA0B;EACjD;EAEA,IAAI,CAACN,QAAQ,CAACO,mBAAmB,EAAE;IACjCN,MAAM,CAACM,mBAAmB,GAAG,mCAAmC;EAClE;EAEA,IAAIP,QAAQ,CAACO,mBAAmB,KAAK,WAAW,IAAI,CAACP,QAAQ,CAACQ,kBAAkB,EAAE;IAChFP,MAAM,CAACO,kBAAkB,GAAG,iCAAiC;EAC/D;EAEA,IAAIR,QAAQ,CAACO,mBAAmB,KAAK,UAAU,IAAI,CAACP,QAAQ,CAACS,YAAY,EAAE;IACzER,MAAM,CAACQ,YAAY,GAAG,2BAA2B;EACnD;EAEA,IAAIT,QAAQ,CAACO,mBAAmB,KAAK,SAAS,IAAI,CAACP,QAAQ,CAACU,oBAAoB,EAAE;IAChFT,MAAM,CAACS,oBAAoB,GAAG,mCAAmC;EACnE;EAEA,IAAIV,QAAQ,CAACW,kBAAkB,KAAK,KAAK,IAAI,CAACX,QAAQ,CAACY,SAAS,CAACT,IAAI,CAAC,CAAC,EAAE;IACvEF,MAAM,CAACW,SAAS,GAAG,wBAAwB;EAC7C;EAEA,IAAI,CAACZ,QAAQ,CAACW,kBAAkB,EAAE;IAChCV,MAAM,CAACU,kBAAkB,GAAG,iDAAiD;EAC/E;EAEA,IAAI,CAACX,QAAQ,CAACa,sBAAsB,CAACV,IAAI,CAAC,CAAC,EAAE;IAC3CF,MAAM,CAACY,sBAAsB,GAAG,sCAAsC;EACxE;EAEA,OAAOZ,MAAM;AACf,CAAC;AAED,eAAeF,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}