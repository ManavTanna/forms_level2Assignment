{"ast":null,"code":"// hooks/useFormValidation.js\nconst useFormValidation = (formData, touchedFields) => {\n  const errors = {};\n\n  // Validate fullName\n  if (touchedFields.fullName && !formData.fullName.trim()) {\n    errors.fullName = 'Full Name is required';\n  }\n\n  // Validate email\n  if (touchedFields.email && !formData.email.trim()) {\n    errors.email = 'Email is required';\n  } else if (touchedFields.email && !/\\S+@\\S+\\.\\S+/.test(formData.email)) {\n    errors.email = 'Email address is invalid';\n  }\n\n  // Validate phoneNumber\n  if (touchedFields.phoneNumber && !formData.phoneNumber.trim()) {\n    errors.phoneNumber = 'Phone Number is required';\n  }\n\n  // Validate applyingForPosition\n  if (touchedFields.applyingForPosition && !formData.applyingForPosition) {\n    errors.applyingForPosition = 'Applying for Position is required';\n  }\n\n  // Validate relevantExperience if applying for Developer\n  if (touchedFields.relevantExperience && formData.applyingForPosition === 'Developer' && !formData.relevantExperience) {\n    errors.relevantExperience = 'Relevant Experience is required';\n  }\n\n  // Validate portfolioURL if applying for Designer\n  if (touchedFields.portfolioURL && formData.applyingForPosition === 'Designer' && !formData.portfolioURL) {\n    errors.portfolioURL = 'Portfolio URL is required';\n  }\n\n  // Validate managementExperience if applying for Manager\n  if (touchedFields.managementExperience && formData.applyingForPosition === 'Manager' && !formData.managementExperience) {\n    errors.managementExperience = 'Management Experience is required';\n  }\n\n  // Validate guestName if attending with guest\n  if (touchedFields.guestName && formData.attendingWithGuest === 'Yes' && !formData.guestName.trim()) {\n    errors.guestName = 'Guest Name is required';\n  }\n\n  // Validate attendingWithGuest\n  if (touchedFields.attendingWithGuest && !formData.attendingWithGuest) {\n    errors.attendingWithGuest = 'Please select if you are attending with a guest';\n  }\n\n  // Validate preferredInterviewTime\n  if (touchedFields.preferredInterviewTime && !formData.preferredInterviewTime.trim()) {\n    errors.preferredInterviewTime = 'Preferred Interview Time is required';\n  }\n  return errors;\n};\nexport default useFormValidation;","map":{"version":3,"names":["useFormValidation","formData","touchedFields","errors","fullName","trim","email","test","phoneNumber","applyingForPosition","relevantExperience","portfolioURL","managementExperience","guestName","attendingWithGuest","preferredInterviewTime"],"sources":["C:/Users/Manav/OneDrive/Desktop/forms_assignment/level_2/src/hooks/Validation.js"],"sourcesContent":["// hooks/useFormValidation.js\r\nconst useFormValidation = (formData, touchedFields) => {\r\n  const errors = {};\r\n\r\n  // Validate fullName\r\n  if (touchedFields.fullName && !formData.fullName.trim()) {\r\n    errors.fullName = 'Full Name is required';\r\n  }\r\n\r\n  // Validate email\r\n  if (touchedFields.email && !formData.email.trim()) {\r\n    errors.email = 'Email is required';\r\n  } else if (touchedFields.email && !/\\S+@\\S+\\.\\S+/.test(formData.email)) {\r\n    errors.email = 'Email address is invalid';\r\n  }\r\n\r\n  // Validate phoneNumber\r\n  if (touchedFields.phoneNumber && !formData.phoneNumber.trim()) {\r\n    errors.phoneNumber = 'Phone Number is required';\r\n  }\r\n\r\n  // Validate applyingForPosition\r\n  if (touchedFields.applyingForPosition && !formData.applyingForPosition) {\r\n    errors.applyingForPosition = 'Applying for Position is required';\r\n  }\r\n\r\n  // Validate relevantExperience if applying for Developer\r\n  if (\r\n    touchedFields.relevantExperience &&\r\n    formData.applyingForPosition === 'Developer' &&\r\n    !formData.relevantExperience\r\n  ) {\r\n    errors.relevantExperience = 'Relevant Experience is required';\r\n  }\r\n\r\n  // Validate portfolioURL if applying for Designer\r\n  if (\r\n    touchedFields.portfolioURL &&\r\n    formData.applyingForPosition === 'Designer' &&\r\n    !formData.portfolioURL\r\n  ) {\r\n    errors.portfolioURL = 'Portfolio URL is required';\r\n  }\r\n\r\n  // Validate managementExperience if applying for Manager\r\n  if (\r\n    touchedFields.managementExperience &&\r\n    formData.applyingForPosition === 'Manager' &&\r\n    !formData.managementExperience\r\n  ) {\r\n    errors.managementExperience = 'Management Experience is required';\r\n  }\r\n\r\n  // Validate guestName if attending with guest\r\n  if (\r\n    touchedFields.guestName &&\r\n    formData.attendingWithGuest === 'Yes' &&\r\n    !formData.guestName.trim()\r\n  ) {\r\n    errors.guestName = 'Guest Name is required';\r\n  }\r\n\r\n  // Validate attendingWithGuest\r\n  if (touchedFields.attendingWithGuest && !formData.attendingWithGuest) {\r\n    errors.attendingWithGuest = 'Please select if you are attending with a guest';\r\n  }\r\n\r\n  // Validate preferredInterviewTime\r\n  if (touchedFields.preferredInterviewTime && !formData.preferredInterviewTime.trim()) {\r\n    errors.preferredInterviewTime = 'Preferred Interview Time is required';\r\n  }\r\n\r\n  return errors;\r\n};\r\n\r\nexport default useFormValidation;\r\n"],"mappings":"AAAA;AACA,MAAMA,iBAAiB,GAAGA,CAACC,QAAQ,EAAEC,aAAa,KAAK;EACrD,MAAMC,MAAM,GAAG,CAAC,CAAC;;EAEjB;EACA,IAAID,aAAa,CAACE,QAAQ,IAAI,CAACH,QAAQ,CAACG,QAAQ,CAACC,IAAI,CAAC,CAAC,EAAE;IACvDF,MAAM,CAACC,QAAQ,GAAG,uBAAuB;EAC3C;;EAEA;EACA,IAAIF,aAAa,CAACI,KAAK,IAAI,CAACL,QAAQ,CAACK,KAAK,CAACD,IAAI,CAAC,CAAC,EAAE;IACjDF,MAAM,CAACG,KAAK,GAAG,mBAAmB;EACpC,CAAC,MAAM,IAAIJ,aAAa,CAACI,KAAK,IAAI,CAAC,cAAc,CAACC,IAAI,CAACN,QAAQ,CAACK,KAAK,CAAC,EAAE;IACtEH,MAAM,CAACG,KAAK,GAAG,0BAA0B;EAC3C;;EAEA;EACA,IAAIJ,aAAa,CAACM,WAAW,IAAI,CAACP,QAAQ,CAACO,WAAW,CAACH,IAAI,CAAC,CAAC,EAAE;IAC7DF,MAAM,CAACK,WAAW,GAAG,0BAA0B;EACjD;;EAEA;EACA,IAAIN,aAAa,CAACO,mBAAmB,IAAI,CAACR,QAAQ,CAACQ,mBAAmB,EAAE;IACtEN,MAAM,CAACM,mBAAmB,GAAG,mCAAmC;EAClE;;EAEA;EACA,IACEP,aAAa,CAACQ,kBAAkB,IAChCT,QAAQ,CAACQ,mBAAmB,KAAK,WAAW,IAC5C,CAACR,QAAQ,CAACS,kBAAkB,EAC5B;IACAP,MAAM,CAACO,kBAAkB,GAAG,iCAAiC;EAC/D;;EAEA;EACA,IACER,aAAa,CAACS,YAAY,IAC1BV,QAAQ,CAACQ,mBAAmB,KAAK,UAAU,IAC3C,CAACR,QAAQ,CAACU,YAAY,EACtB;IACAR,MAAM,CAACQ,YAAY,GAAG,2BAA2B;EACnD;;EAEA;EACA,IACET,aAAa,CAACU,oBAAoB,IAClCX,QAAQ,CAACQ,mBAAmB,KAAK,SAAS,IAC1C,CAACR,QAAQ,CAACW,oBAAoB,EAC9B;IACAT,MAAM,CAACS,oBAAoB,GAAG,mCAAmC;EACnE;;EAEA;EACA,IACEV,aAAa,CAACW,SAAS,IACvBZ,QAAQ,CAACa,kBAAkB,KAAK,KAAK,IACrC,CAACb,QAAQ,CAACY,SAAS,CAACR,IAAI,CAAC,CAAC,EAC1B;IACAF,MAAM,CAACU,SAAS,GAAG,wBAAwB;EAC7C;;EAEA;EACA,IAAIX,aAAa,CAACY,kBAAkB,IAAI,CAACb,QAAQ,CAACa,kBAAkB,EAAE;IACpEX,MAAM,CAACW,kBAAkB,GAAG,iDAAiD;EAC/E;;EAEA;EACA,IAAIZ,aAAa,CAACa,sBAAsB,IAAI,CAACd,QAAQ,CAACc,sBAAsB,CAACV,IAAI,CAAC,CAAC,EAAE;IACnFF,MAAM,CAACY,sBAAsB,GAAG,sCAAsC;EACxE;EAEA,OAAOZ,MAAM;AACf,CAAC;AAED,eAAeH,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}