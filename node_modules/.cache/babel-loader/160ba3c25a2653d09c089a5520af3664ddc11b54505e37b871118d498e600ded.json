{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from 'react';\nconst useStateForm = () => {\n  _s();\n  const [values, setValues] = useState({\n    fullName: '',\n    email: '',\n    phone: '',\n    position: '',\n    experience: '',\n    portfolio: '',\n    managementExperience: '',\n    skills: [],\n    interviewTime: '',\n    submitted: false\n  });\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setValues({\n      ...values,\n      [name]: value\n    });\n  };\n  const handleCheckboxChange = e => {\n    const {\n      value\n    } = e.target;\n    const skills = [...values.skills];\n    if (skills.includes(value)) {\n      skills.splice(skills.indexOf(value), 1);\n    } else {\n      skills.push(value);\n    }\n    setValues({\n      ...values,\n      skills: skills\n    });\n  };\n  const handleDateChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setValues({\n      ...values,\n      [name]: value\n    });\n  };\n  const handleDropdownChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setValues({\n      ...values,\n      [name]: value,\n      experience: '',\n      // Reset experience when position changes\n      portfolio: '',\n      // Reset portfolio when position changes\n      managementExperience: '',\n      // Reset management experience when position changes\n      skills: [] // Reset skills when position changes\n    });\n  };\n  const setSubmitted = isSubmitted => {\n    setValues({\n      ...values,\n      submitted: isSubmitted\n    });\n  };\n  return {\n    values,\n    handleChange,\n    handleCheckboxChange,\n    handleDateChange,\n    handleDropdownChange,\n    setSubmitted\n  };\n};\n_s(useStateForm, \"/EZuGj3+Z5c4E19dYLAkp4n4m8U=\");\nexport default useStateForm;","map":{"version":3,"names":["useState","useStateForm","_s","values","setValues","fullName","email","phone","position","experience","portfolio","managementExperience","skills","interviewTime","submitted","handleChange","e","name","value","target","handleCheckboxChange","includes","splice","indexOf","push","handleDateChange","handleDropdownChange","setSubmitted","isSubmitted"],"sources":["C:/Users/Manav/OneDrive/Desktop/forms_assignment/level_2/src/hooks/useFormState.js"],"sourcesContent":["import { useState } from 'react';\r\n\r\nconst useStateForm = () => {\r\n  const [values, setValues] = useState({\r\n    fullName: '',\r\n    email: '',\r\n    phone: '',\r\n    position: '',\r\n    experience: '',\r\n    portfolio: '',\r\n    managementExperience: '',\r\n    skills: [],\r\n    interviewTime: '',\r\n    submitted: false\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setValues({\r\n      ...values,\r\n      [name]: value\r\n    });\r\n  };\r\n\r\n  const handleCheckboxChange = (e) => {\r\n    const { value } = e.target;\r\n    const skills = [...values.skills];\r\n    if (skills.includes(value)) {\r\n      skills.splice(skills.indexOf(value), 1);\r\n    } else {\r\n      skills.push(value);\r\n    }\r\n    setValues({\r\n      ...values,\r\n      skills: skills\r\n    });\r\n  };\r\n\r\n  const handleDateChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setValues({\r\n      ...values,\r\n      [name]: value\r\n    });\r\n  };\r\n\r\n  const handleDropdownChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setValues({\r\n      ...values,\r\n      [name]: value,\r\n      experience: '', // Reset experience when position changes\r\n      portfolio: '', // Reset portfolio when position changes\r\n      managementExperience: '', // Reset management experience when position changes\r\n      skills: [] // Reset skills when position changes\r\n    });\r\n  };\r\n\r\n  const setSubmitted = (isSubmitted) => {\r\n    setValues({\r\n      ...values,\r\n      submitted: isSubmitted\r\n    });\r\n  };\r\n\r\n  return {\r\n    values,\r\n    handleChange,\r\n    handleCheckboxChange,\r\n    handleDateChange,\r\n    handleDropdownChange,\r\n    setSubmitted\r\n  };\r\n};\r\n\r\nexport default useStateForm;\r\n"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAEhC,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGJ,QAAQ,CAAC;IACnCK,QAAQ,EAAE,EAAE;IACZC,KAAK,EAAE,EAAE;IACTC,KAAK,EAAE,EAAE;IACTC,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,EAAE;IACdC,SAAS,EAAE,EAAE;IACbC,oBAAoB,EAAE,EAAE;IACxBC,MAAM,EAAE,EAAE;IACVC,aAAa,EAAE,EAAE;IACjBC,SAAS,EAAE;EACb,CAAC,CAAC;EAEF,MAAMC,YAAY,GAAIC,CAAC,IAAK;IAC1B,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAGF,CAAC,CAACG,MAAM;IAChCf,SAAS,CAAC;MACR,GAAGD,MAAM;MACT,CAACc,IAAI,GAAGC;IACV,CAAC,CAAC;EACJ,CAAC;EAED,MAAME,oBAAoB,GAAIJ,CAAC,IAAK;IAClC,MAAM;MAAEE;IAAM,CAAC,GAAGF,CAAC,CAACG,MAAM;IAC1B,MAAMP,MAAM,GAAG,CAAC,GAAGT,MAAM,CAACS,MAAM,CAAC;IACjC,IAAIA,MAAM,CAACS,QAAQ,CAACH,KAAK,CAAC,EAAE;MAC1BN,MAAM,CAACU,MAAM,CAACV,MAAM,CAACW,OAAO,CAACL,KAAK,CAAC,EAAE,CAAC,CAAC;IACzC,CAAC,MAAM;MACLN,MAAM,CAACY,IAAI,CAACN,KAAK,CAAC;IACpB;IACAd,SAAS,CAAC;MACR,GAAGD,MAAM;MACTS,MAAM,EAAEA;IACV,CAAC,CAAC;EACJ,CAAC;EAED,MAAMa,gBAAgB,GAAIT,CAAC,IAAK;IAC9B,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAGF,CAAC,CAACG,MAAM;IAChCf,SAAS,CAAC;MACR,GAAGD,MAAM;MACT,CAACc,IAAI,GAAGC;IACV,CAAC,CAAC;EACJ,CAAC;EAED,MAAMQ,oBAAoB,GAAIV,CAAC,IAAK;IAClC,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAGF,CAAC,CAACG,MAAM;IAChCf,SAAS,CAAC;MACR,GAAGD,MAAM;MACT,CAACc,IAAI,GAAGC,KAAK;MACbT,UAAU,EAAE,EAAE;MAAE;MAChBC,SAAS,EAAE,EAAE;MAAE;MACfC,oBAAoB,EAAE,EAAE;MAAE;MAC1BC,MAAM,EAAE,EAAE,CAAC;IACb,CAAC,CAAC;EACJ,CAAC;EAED,MAAMe,YAAY,GAAIC,WAAW,IAAK;IACpCxB,SAAS,CAAC;MACR,GAAGD,MAAM;MACTW,SAAS,EAAEc;IACb,CAAC,CAAC;EACJ,CAAC;EAED,OAAO;IACLzB,MAAM;IACNY,YAAY;IACZK,oBAAoB;IACpBK,gBAAgB;IAChBC,oBAAoB;IACpBC;EACF,CAAC;AACH,CAAC;AAACzB,EAAA,CAvEID,YAAY;AAyElB,eAAeA,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}