{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from 'react';\nconst validateForm = formData => {\n  _s();\n  const [touchedFields, setTouchedFields] = useState({\n    fullName: false,\n    email: false,\n    phoneNumber: false,\n    applyingForPosition: false,\n    relevantExperience: false,\n    portfolioURL: false,\n    managementExperience: false,\n    additionalSkills: false,\n    preferredInterviewDate: false,\n    preferredInterviewTime: false\n  });\n  const validateForm = () => {\n    const {\n      fullName,\n      email,\n      phoneNumber,\n      applyingForPosition,\n      additionalSkills,\n      relevantExperience,\n      portfolioURL,\n      managementExperience,\n      preferredInterviewDate,\n      preferredInterviewTime\n    } = formData;\n\n    // Check if at least one additional skill is selected\n    const isSkillsValid = Object.values(additionalSkills).some(skill => skill);\n\n    // Validation rules based on applyingForPosition\n    if (applyingForPosition === 'Developer' || applyingForPosition === 'Designer') {\n      return fullName.trim() !== '' && isValidEmail(email) && phoneNumber.trim() !== '' && isSkillsValid && relevantExperience.trim() !== '';\n    } else if (applyingForPosition === 'Manager') {\n      return fullName.trim() !== '' && isValidEmail(email) && phoneNumber.trim() !== '' && isSkillsValid && managementExperience.trim() !== '';\n    } else {\n      // Default case for other positions (if any)\n      return fullName.trim() !== '' && isValidEmail(email) && phoneNumber.trim() !== '' && isSkillsValid;\n    }\n  };\n  const isValidEmail = email => {\n    // Basic email validation using regex\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    return emailRegex.test(email);\n  };\n  const validateField = fieldName => {\n    setTouchedFields({\n      ...touchedFields,\n      [fieldName]: true\n    });\n  };\n  return {\n    validateForm,\n    validateField,\n    touchedFields\n  };\n};\n_s(validateForm, \"lAXdWbgV9qkeL7AQ3tdlX3uge0s=\");\nexport default useJobApplicationValidation;","map":{"version":3,"names":["useState","validateForm","formData","_s","touchedFields","setTouchedFields","fullName","email","phoneNumber","applyingForPosition","relevantExperience","portfolioURL","managementExperience","additionalSkills","preferredInterviewDate","preferredInterviewTime","isSkillsValid","Object","values","some","skill","trim","isValidEmail","emailRegex","test","validateField","fieldName","useJobApplicationValidation"],"sources":["C:/Users/Manav/OneDrive/Desktop/forms_assignment/level_2/src/hooks/useValidation.js"],"sourcesContent":["import { useState } from 'react';\r\n\r\nconst validateForm = (formData) => {\r\n  const [touchedFields, setTouchedFields] = useState({\r\n    fullName: false,\r\n    email: false,\r\n    phoneNumber: false,\r\n    applyingForPosition: false,\r\n    relevantExperience: false,\r\n    portfolioURL: false,\r\n    managementExperience: false,\r\n    additionalSkills: false,\r\n    preferredInterviewDate: false,\r\n    preferredInterviewTime: false,\r\n  });\r\n\r\n  const validateForm = () => {\r\n    const {\r\n      fullName,\r\n      email,\r\n      phoneNumber,\r\n      applyingForPosition,\r\n      additionalSkills,\r\n      relevantExperience,\r\n      portfolioURL,\r\n      managementExperience,\r\n      preferredInterviewDate,\r\n      preferredInterviewTime,\r\n    } = formData;\r\n\r\n    // Check if at least one additional skill is selected\r\n    const isSkillsValid = Object.values(additionalSkills).some((skill) => skill);\r\n\r\n    // Validation rules based on applyingForPosition\r\n    if (applyingForPosition === 'Developer' || applyingForPosition === 'Designer') {\r\n      return (\r\n        fullName.trim() !== '' &&\r\n        isValidEmail(email) &&\r\n        phoneNumber.trim() !== '' &&\r\n        isSkillsValid &&\r\n        relevantExperience.trim() !== ''\r\n      );\r\n    } else if (applyingForPosition === 'Manager') {\r\n      return (\r\n        fullName.trim() !== '' &&\r\n        isValidEmail(email) &&\r\n        phoneNumber.trim() !== '' &&\r\n        isSkillsValid &&\r\n        managementExperience.trim() !== ''\r\n      );\r\n    } else {\r\n      // Default case for other positions (if any)\r\n      return (\r\n        fullName.trim() !== '' &&\r\n        isValidEmail(email) &&\r\n        phoneNumber.trim() !== '' &&\r\n        isSkillsValid\r\n      );\r\n    }\r\n  };\r\n\r\n  const isValidEmail = (email) => {\r\n    // Basic email validation using regex\r\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n    return emailRegex.test(email);\r\n  };\r\n\r\n  const validateField = (fieldName) => {\r\n    setTouchedFields({\r\n      ...touchedFields,\r\n      [fieldName]: true,\r\n    });\r\n  };\r\n\r\n  return { validateForm, validateField, touchedFields };\r\n};\r\n\r\nexport default useJobApplicationValidation;\r\n"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAEhC,MAAMC,YAAY,GAAIC,QAAQ,IAAK;EAAAC,EAAA;EACjC,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGL,QAAQ,CAAC;IACjDM,QAAQ,EAAE,KAAK;IACfC,KAAK,EAAE,KAAK;IACZC,WAAW,EAAE,KAAK;IAClBC,mBAAmB,EAAE,KAAK;IAC1BC,kBAAkB,EAAE,KAAK;IACzBC,YAAY,EAAE,KAAK;IACnBC,oBAAoB,EAAE,KAAK;IAC3BC,gBAAgB,EAAE,KAAK;IACvBC,sBAAsB,EAAE,KAAK;IAC7BC,sBAAsB,EAAE;EAC1B,CAAC,CAAC;EAEF,MAAMd,YAAY,GAAGA,CAAA,KAAM;IACzB,MAAM;MACJK,QAAQ;MACRC,KAAK;MACLC,WAAW;MACXC,mBAAmB;MACnBI,gBAAgB;MAChBH,kBAAkB;MAClBC,YAAY;MACZC,oBAAoB;MACpBE,sBAAsB;MACtBC;IACF,CAAC,GAAGb,QAAQ;;IAEZ;IACA,MAAMc,aAAa,GAAGC,MAAM,CAACC,MAAM,CAACL,gBAAgB,CAAC,CAACM,IAAI,CAAEC,KAAK,IAAKA,KAAK,CAAC;;IAE5E;IACA,IAAIX,mBAAmB,KAAK,WAAW,IAAIA,mBAAmB,KAAK,UAAU,EAAE;MAC7E,OACEH,QAAQ,CAACe,IAAI,CAAC,CAAC,KAAK,EAAE,IACtBC,YAAY,CAACf,KAAK,CAAC,IACnBC,WAAW,CAACa,IAAI,CAAC,CAAC,KAAK,EAAE,IACzBL,aAAa,IACbN,kBAAkB,CAACW,IAAI,CAAC,CAAC,KAAK,EAAE;IAEpC,CAAC,MAAM,IAAIZ,mBAAmB,KAAK,SAAS,EAAE;MAC5C,OACEH,QAAQ,CAACe,IAAI,CAAC,CAAC,KAAK,EAAE,IACtBC,YAAY,CAACf,KAAK,CAAC,IACnBC,WAAW,CAACa,IAAI,CAAC,CAAC,KAAK,EAAE,IACzBL,aAAa,IACbJ,oBAAoB,CAACS,IAAI,CAAC,CAAC,KAAK,EAAE;IAEtC,CAAC,MAAM;MACL;MACA,OACEf,QAAQ,CAACe,IAAI,CAAC,CAAC,KAAK,EAAE,IACtBC,YAAY,CAACf,KAAK,CAAC,IACnBC,WAAW,CAACa,IAAI,CAAC,CAAC,KAAK,EAAE,IACzBL,aAAa;IAEjB;EACF,CAAC;EAED,MAAMM,YAAY,GAAIf,KAAK,IAAK;IAC9B;IACA,MAAMgB,UAAU,GAAG,4BAA4B;IAC/C,OAAOA,UAAU,CAACC,IAAI,CAACjB,KAAK,CAAC;EAC/B,CAAC;EAED,MAAMkB,aAAa,GAAIC,SAAS,IAAK;IACnCrB,gBAAgB,CAAC;MACf,GAAGD,aAAa;MAChB,CAACsB,SAAS,GAAG;IACf,CAAC,CAAC;EACJ,CAAC;EAED,OAAO;IAAEzB,YAAY;IAAEwB,aAAa;IAAErB;EAAc,CAAC;AACvD,CAAC;AAACD,EAAA,CAzEIF,YAAY;AA2ElB,eAAe0B,2BAA2B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}