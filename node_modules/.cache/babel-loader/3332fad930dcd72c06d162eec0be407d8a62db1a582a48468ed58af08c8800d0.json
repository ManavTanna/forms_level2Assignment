{"ast":null,"code":"var _s = $RefreshSig$();\n// useValidation.js\n\nimport { useState } from 'react';\nimport validator from 'validator';\nconst useValidation = () => {\n  _s();\n  const [errors, setErrors] = useState({});\n  const validate = values => {\n    let tempErrors = {};\n\n    // Validation logic for each field\n    if (!values.fullName) {\n      tempErrors.fullName = 'Full Name is required';\n    }\n    if (!values.email) {\n      tempErrors.email = 'Email is required';\n    } else if (!/\\S+@\\S+\\.\\S+/.test(values.email)) {\n      tempErrors.email = 'Email address is invalid';\n    }\n    if (!values.phone) {\n      tempErrors.phone = 'Phone Number is required';\n    } else if (!/^\\d+$/.test(values.phone)) {\n      tempErrors.phone = 'Phone Number must only contain digits';\n    } else if (values.phone.length !== 10) {\n      tempErrors.phone = 'Phone Number must be exactly 10 digits';\n    } else if (!/^[789]\\d{9}$/.test(values.phone)) {\n      tempErrors.phone = 'Phone Number must start with 7, 8, or 9';\n    }\n    if (!values.position) {\n      tempErrors.position = 'Position is required';\n    }\n    if ((values.position === 'Developer' || values.position === 'Designer') && !values.experience) {\n      tempErrors.experience = 'Relevant Experience is required';\n    }\n    if (values.position === 'Designer' && !values.portfolio) {\n      tempErrors.portfolio = 'Portfolio URL is required';\n    }\n    if (values.position === 'Manager' && !values.managementExperience) {\n      tempErrors.managementExperience = 'Management Experience is required';\n    }\n    if (!values.skills || values.skills.length === 0) {\n      tempErrors.skills = 'At least one skill must be selected';\n    }\n    if (!values.interviewTime) {\n      tempErrors.interviewTime = 'Preferred Interview Time and Date is required';\n    }\n\n    // Update errors state\n    setErrors(tempErrors);\n    return Object.keys(tempErrors).length === 0;\n    // Return true if no errors, false otherwise\n  };\n  return {\n    errors,\n    validate\n  };\n};\n_s(useValidation, \"o+SUXTQUSJNurFcpxixiLrA9BM0=\");\nexport default useValidation;","map":{"version":3,"names":["useState","validator","useValidation","_s","errors","setErrors","validate","values","tempErrors","fullName","email","test","phone","length","position","experience","portfolio","managementExperience","skills","interviewTime","Object","keys"],"sources":["C:/Users/Manav/OneDrive/Desktop/forms_assignment/level_2/src/hooks/useValidation.js"],"sourcesContent":["// useValidation.js\r\n\r\nimport { useState } from 'react';\r\nimport validator from 'validator';\r\n\r\nconst useValidation = () => {\r\n  const [errors, setErrors] = useState({});\r\n\r\n\r\n\r\n  const validate = (values) => {\r\n   let tempErrors = {};\r\n\r\n    // Validation logic for each field\r\n    if (!values.fullName) {\r\n      tempErrors.fullName = 'Full Name is required';\r\n    }\r\n\r\n    if (!values.email) {\r\n      tempErrors.email = 'Email is required';\r\n    } else if (!/\\S+@\\S+\\.\\S+/.test(values.email)) {\r\n      tempErrors.email = 'Email address is invalid';\r\n    }\r\n\r\n    if (!values.phone) {\r\n      tempErrors.phone = 'Phone Number is required';\r\n    } else if (!/^\\d+$/.test(values.phone)) {\r\n      tempErrors.phone = 'Phone Number must only contain digits';\r\n    } else if (values.phone.length !== 10) {\r\n      tempErrors.phone = 'Phone Number must be exactly 10 digits';\r\n    } else if (!/^[789]\\d{9}$/.test(values.phone)) {\r\n      tempErrors.phone = 'Phone Number must start with 7, 8, or 9';\r\n    }\r\n\r\n    if (!values.position) {\r\n      tempErrors.position = 'Position is required';\r\n    }\r\n\r\n    if ((values.position === 'Developer' || values.position === 'Designer') && !values.experience) {\r\n      tempErrors.experience = 'Relevant Experience is required';\r\n    }\r\n\r\n    if (values.position === 'Designer' && !values.portfolio) {\r\n      tempErrors.portfolio = 'Portfolio URL is required';\r\n    }\r\n\r\n    if (values.position === 'Manager' && !values.managementExperience) {\r\n      tempErrors.managementExperience = 'Management Experience is required';\r\n    }\r\n\r\n    if (!values.skills || values.skills.length === 0) {\r\n      tempErrors.skills = 'At least one skill must be selected';\r\n    }\r\n\r\n    if (!values.interviewTime) {\r\n      tempErrors.interviewTime = 'Preferred Interview Time and Date is required';\r\n    }\r\n\r\n    // Update errors state\r\n    setErrors(tempErrors);\r\n    return Object.keys(tempErrors).length === 0;\r\n    // Return true if no errors, false otherwise\r\n    \r\n  };\r\n\r\n  return {\r\n    errors,\r\n    validate,\r\n  };\r\n};\r\n\r\nexport default useValidation;\r\n"],"mappings":";AAAA;;AAEA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,SAAS,MAAM,WAAW;AAEjC,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGL,QAAQ,CAAC,CAAC,CAAC,CAAC;EAIxC,MAAMM,QAAQ,GAAIC,MAAM,IAAK;IAC5B,IAAIC,UAAU,GAAG,CAAC,CAAC;;IAElB;IACA,IAAI,CAACD,MAAM,CAACE,QAAQ,EAAE;MACpBD,UAAU,CAACC,QAAQ,GAAG,uBAAuB;IAC/C;IAEA,IAAI,CAACF,MAAM,CAACG,KAAK,EAAE;MACjBF,UAAU,CAACE,KAAK,GAAG,mBAAmB;IACxC,CAAC,MAAM,IAAI,CAAC,cAAc,CAACC,IAAI,CAACJ,MAAM,CAACG,KAAK,CAAC,EAAE;MAC7CF,UAAU,CAACE,KAAK,GAAG,0BAA0B;IAC/C;IAEA,IAAI,CAACH,MAAM,CAACK,KAAK,EAAE;MACjBJ,UAAU,CAACI,KAAK,GAAG,0BAA0B;IAC/C,CAAC,MAAM,IAAI,CAAC,OAAO,CAACD,IAAI,CAACJ,MAAM,CAACK,KAAK,CAAC,EAAE;MACtCJ,UAAU,CAACI,KAAK,GAAG,uCAAuC;IAC5D,CAAC,MAAM,IAAIL,MAAM,CAACK,KAAK,CAACC,MAAM,KAAK,EAAE,EAAE;MACrCL,UAAU,CAACI,KAAK,GAAG,wCAAwC;IAC7D,CAAC,MAAM,IAAI,CAAC,cAAc,CAACD,IAAI,CAACJ,MAAM,CAACK,KAAK,CAAC,EAAE;MAC7CJ,UAAU,CAACI,KAAK,GAAG,yCAAyC;IAC9D;IAEA,IAAI,CAACL,MAAM,CAACO,QAAQ,EAAE;MACpBN,UAAU,CAACM,QAAQ,GAAG,sBAAsB;IAC9C;IAEA,IAAI,CAACP,MAAM,CAACO,QAAQ,KAAK,WAAW,IAAIP,MAAM,CAACO,QAAQ,KAAK,UAAU,KAAK,CAACP,MAAM,CAACQ,UAAU,EAAE;MAC7FP,UAAU,CAACO,UAAU,GAAG,iCAAiC;IAC3D;IAEA,IAAIR,MAAM,CAACO,QAAQ,KAAK,UAAU,IAAI,CAACP,MAAM,CAACS,SAAS,EAAE;MACvDR,UAAU,CAACQ,SAAS,GAAG,2BAA2B;IACpD;IAEA,IAAIT,MAAM,CAACO,QAAQ,KAAK,SAAS,IAAI,CAACP,MAAM,CAACU,oBAAoB,EAAE;MACjET,UAAU,CAACS,oBAAoB,GAAG,mCAAmC;IACvE;IAEA,IAAI,CAACV,MAAM,CAACW,MAAM,IAAIX,MAAM,CAACW,MAAM,CAACL,MAAM,KAAK,CAAC,EAAE;MAChDL,UAAU,CAACU,MAAM,GAAG,qCAAqC;IAC3D;IAEA,IAAI,CAACX,MAAM,CAACY,aAAa,EAAE;MACzBX,UAAU,CAACW,aAAa,GAAG,+CAA+C;IAC5E;;IAEA;IACAd,SAAS,CAACG,UAAU,CAAC;IACrB,OAAOY,MAAM,CAACC,IAAI,CAACb,UAAU,CAAC,CAACK,MAAM,KAAK,CAAC;IAC3C;EAEF,CAAC;EAED,OAAO;IACLT,MAAM;IACNE;EACF,CAAC;AACH,CAAC;AAACH,EAAA,CAhEID,aAAa;AAkEnB,eAAeA,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}